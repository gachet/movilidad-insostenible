axis.ticks = element_blank()
)
mekko_plot
###### MAP #####
library(sp)
getinfo.shape('../shapefiles/distritos/200001563.shp')
library(maptools)
install.packages('maptools')
install.packages("maptools")
library(maptools)
getinfo.shape('../shapefiles/distritos/200001563.shp')
ED50<-CRS(paste("+proj=utm +zone=30 +ellps=intl +units=m +no_defs"))
fileDistritos <- '../shapefiles/distritos/200001563.shp'
distritos <- readShapePoly(fileDistritos, proj4string = ED50)
###### MAP #####
library(rgdal)
install.packages('rgdal')
###### MAP #####
library(rgdal)
distritos <- readShapePoly(fileDistritos, proj4string = ED50)
distritos <- readOGR(fileDistritos, proj4string = ED50)
distritos <- readOGR(fileDistritos)
str(distritos)
distritos@data
plot(distritos)
head(distritos$data)
head(distritos@data)
View(municipios)
?str_subset
install.packages('tidyverse')
library(tidyverse)
str_subset(x, "[aeiou]")
distritos@data <- distritos@data %>%
mutate(code_muni = str_split(DESBDT, '-'))
head(distritos@data)
distritos@data <- distritos@data %>%
mutate(code_muni = str_split(DESBDT, '-'))[1]
head(distritos@data)
distritos@data <- distritos@data %>%
mutate(code_muni = str_split(DESBDT, '-')[1])
head(distritos@data)
str_split('001-65', '-')
str_split('001-65', '-')[1]
str_split('001-65', '-')[[1]]
str_split('001-65', '-')[[1]][1]
distritos@data <- distritos@data %>%
mutate(code_muni = paste0('28', str_split(DESBDT, '-')[[1]][1]))
head(distritos@data)
distritos@data <- distritos@data %>%
mutate(code_muni = paste0('28', str_split(DESBDT, '-')[[1]][1]))
head(distritos@data)
distritos@data <- distritos@data %>%
rowwise() %>%
mutate(code_muni = paste0('28', str_split(DESBDT, '-')[[1]][1]))
head(distritos@data)
View(municipios)
distritos@data <- distritos@data %>%
rowwise() %>%
mutate(
code_muni = paste0('28', str_split(DESBDT, '-')[[1]][1]),
code_distrito = str_split(DESBDT, '-')[[1]][2],
code = ifelse(code_muni != '28079', code_muni, paste0('28', DESBDT))
)
head(distritos@data)
filter(distritos@data, code_muni == 28079)
View(inOut)
View(inOut)
distritos@data <- distritos@data %>%
rowwise() %>%
mutate(
code_muni = paste0('28', str_split(DESBDT, '-')[[1]][1]),
code_distrito = str_split(DESBDT, '-')[[1]][2],
code = ifelse(code_muni != '28079', code_muni, paste0('28', DESBDT))
) %>%
left_join(inOut, by = c('code' = 'origin_ine_code'))
head(distritos@data)
plot(distritos, fill = outside_per)
plot(distritos, col = distritos$outside_per)
plot(distritos, col = distritos$outside_per)
plot(distritos, col = distritos$code)
plot(distritos, fill = distritos$code)
dotsInPolys(distritos, distritos$outside_per)
dotsInPolys(distritos, distritos$outside_per)
distritos@polygons
str(distritos, max.level = 2)
distritosLongLat <- spTransform(distritos, CRS("+proj=longlat"))
str(distritos, max.level = 2)
distritos@polygons[[1]]
head(coordinates(distritosLongLat))
distritosLongLat@data$id <- rownames(distritosLongLat@data)
head(distritosLongLat@data)
dataDistritos <- fortify(distritosLongLat, region="id")
class(dataDistritos)
head(dataDistritos)
head(distritosLongLat@data)
dataDistritos <- fortify(distritosLongLat, region="id")
library(rgos)
library(rgeos)
install.packages('rgeos')
library(rgeos)
dataDistritos <- fortify(distritosLongLat, region="id")
distritos <- readOGR('../shapefiles/distritos/200001563.shp')
distritosLongLat <- spTransform(distritos, CRS("+proj=longlat"))
distritosLongLat@data$id <- rownames(distritosLongLat@data)
head(distritosLongLat@data)
dataDistritos <- fortify(distritosLongLat, region="id")
install.packages('rgeos', type='source')
install.packages('rgdal', type='source')
install.packages("rgeos", type = "source")
###### MAP #####
library(rgdal)
library(rgeos)
distritos <- readOGR('../shapefiles/distritos/200001563.shp')
distritosLongLat <- spTransform(distritos, CRS("+proj=longlat"))
distritosLongLat@data$id <- rownames(distritosLongLat@data)
dataDistritos <- fortify(distritosLongLat, region="id")
library(ggplot2)
dataDistritos <- fortify(distritosLongLat, region="id")
class(dataDistritos)
head(dataDistritos)
library(tidyverse)
tmp <- dataDistritos %>%
left_join(distritos@data)
head(distritos@data)
head(distritosLongLat)
head(distritosLongLat@data)
tmp <- dataDistritos %>%
left_join(distritosLongLat@data)
View(tmp)
tmp <- dataDistritos %>%
left_join(distritosLongLat@data) %>%
rowwise() %>%
mutate(
code_muni = paste0('28', str_split(DESBDT, '-')[[1]][1]),
code_distrito = str_split(DESBDT, '-')[[1]][2],
code = ifelse(code_muni != '28079', code_muni, paste0('28', DESBDT))
) %>%
left_join(inOut, by = c('code' = 'origin_ine_code'))
head(tmp)
ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
scale_fill_gradient(low="grey90", high="black", limits=c(0,500)) +
theme(legend.position = "none",
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
text = element_blank())
ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
scale_fill_gradient(low="grey90", high="black", limits=c(0,1)) +
theme(legend.position = "none",
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
text = element_blank())
max(tmp$outside_per)
ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
scale_fill_gradient(low="#fef0eb", high="#F68F6A", limits=c(0,1)) +
theme(legend.position = "none",
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
text = element_blank())
max(tmp$outside_per)
min(tmp$outside_per)
ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
scale_fill_gradient(low="#fef0eb", high="#F68F6A", limits=c(0.4,1)) +
theme(legend.position = "none",
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
text = element_blank())
ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
scale_fill_gradient(low="#fef0eb", high="#F68F6A", limits=c(0.47,1)) +
theme(legend.position = "none",
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
text = element_blank())
ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
scale_fill_gradient(low="#fef0eb", high="#f4561e", limits=c(0.47,1)) +
theme(legend.position = "none",
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
text = element_blank())
ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
scale_fill_gradient(low="#fef0eb", high="#cc3d0a", limits=c(0.47,1)) +
theme(legend.position = "none",
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
text = element_blank())
ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
scale_fill_gradient(low="#fef0eb", high="#f4561e", limits=c(min(outside_per), max(outside_per))) +
theme(legend.position = "none",
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
text = element_blank())
ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
scale_fill_gradient(low="#fef0eb", high="#f4561e", limits=c(min(tmp$outside_per), max(tmp$outside_per))) +
theme(legend.position = "none",
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
text = element_blank())
ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
scale_fill_gradient(low="#fff0eb", high="#f4561e", limits=c(min(tmp$outside_per), max(tmp$outside_per))) +
theme(legend.position = "none",
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
text = element_blank())
ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
scale_fill_gradient(low="#fff0eb", high="#f4561e", limits=c(min(tmp$outside_per), max(tmp$outside_per))) +
theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
text = element_blank())
ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
scale_fill_gradient(low="#fff0eb", high="#f4561e", limits=c(min(tmp$outside_per), max(tmp$outside_per))) +
theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
scale_fill_gradient(low="#fff0eb", high="#f4561e", limits=c(min(tmp$outside_per), max(tmp$outside_per))) +
theme(legend.position = 'bottom',
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank()
)
ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
scale_fill_gradient(low="#fff0eb", high="#f4561e", limits=c(min(tmp$outside_per), max(tmp$outside_per))) +
labs(fill='% trabajadores que se desplazan') +
theme(legend.position = 'bottom',
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank()
)
map <- ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
scale_fill_gradient(low="#fff0eb", high="#f4561e", limits=c(min(tmp$outside_per), max(tmp$outside_per))) +
labs(fill='% trabajadores que se desplazan') +
theme(legend.position = 'bottom',
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank()
)
map <- ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
# scale_fill_gradient(low="#fff0eb", high="#f4561e", limits=c(min(tmp$outside_per), max(tmp$outside_per))) +
labs(fill='% trabajadores que se desplazan') +
theme(legend.position = 'bottom',
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank()
)
map <- ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
# scale_fill_gradient(low="#fff0eb", high="#f4561e", limits=c(min(tmp$outside_per), max(tmp$outside_per))) +
labs(fill='% trabajadores que se desplazan') +
theme(legend.position = 'bottom',
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank()
)
map
map <- ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = -outside_per), data = tmp) +
# scale_fill_gradient(low="#fff0eb", high="#f4561e", limits=c(min(tmp$outside_per), max(tmp$outside_per))) +
labs(fill='% trabajadores que se desplazan') +
theme(legend.position = 'bottom',
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank()
)
map
map <- ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = rev(outside_per)), data = tmp) +
# scale_fill_gradient(low="#fff0eb", high="#f4561e", limits=c(min(tmp$outside_per), max(tmp$outside_per))) +
labs(fill='% trabajadores que se desplazan') +
theme(legend.position = 'bottom',
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank()
)
map
map <- ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
# scale_fill_gradient(low="#fff0eb", high="#f4561e", limits=c(min(tmp$outside_per), max(tmp$outside_per))) +
scale_fill_continuous(high = "#132B43", low = "#56B1F7") +
labs(fill='% trabajadores que se desplazan') +
theme(legend.position = 'bottom',
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank()
)
map
map <- ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
# scale_fill_gradient(low="#fff0eb", high="#f4561e", limits=c(min(tmp$outside_per), max(tmp$outside_per))) +
scale_fill_continuous(high = "#431313", low = "#fff0eb") +
labs(fill='% trabajadores que se desplazan') +
theme(legend.position = 'bottom',
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank()
)
map
map <- ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
# scale_fill_gradient(low="#fff0eb", high="#f4561e", limits=c(min(tmp$outside_per), max(tmp$outside_per))) +
scale_fill_continuous(high = "#ed470c", low = "#fff0eb") +
labs(fill='% trabajadores que se desplazan') +
theme(legend.position = 'bottom',
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank()
)
map
map <- ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
# scale_fill_gradient(low="#fff0eb", high="#f4561e", limits=c(min(tmp$outside_per), max(tmp$outside_per))) +
scale_fill_continuous(high = "#d53f0a", low = "#fff0eb") +
labs(fill='% trabajadores que se desplazan') +
theme(legend.position = 'bottom',
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank()
)
map
map <- ggplot() +
geom_polygon(aes(x=long, y=lat, group = group, fill = outside_per), data = tmp) +
# scale_fill_gradient(low="#fff0eb", high="#f4561e", limits=c(min(tmp$outside_per), max(tmp$outside_per))) +
scale_fill_continuous(high = "#ed340c", low = "#ffffeb") +
labs(fill='% trabajadores que se desplazan') +
theme(legend.position = 'bottom',
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank()
)
map
ggsave('outputs/imgs/inside_outside_mekko.png', mekko_plot, width = 15.2, height = 30)
ggsave('outputs/imgs/map.png', map)
APIkey <-  'AIzaSyAiEWRKSQfdgtDDDW3nhGL6K2atuPtwDlk'
library(openxlsx)
library(tidyverse)
library(magrittr)
library(jsonlite)
setwd('~/Documents/_projects/2018/movilidad-insostenible/residencia_trabajo/r/')
APIkey <-  'AIzaSyAiEWRKSQfdgtDDDW3nhGL6K2atuPtwDlk'
# mode: "driving",  "walking",  "bicycling",  "transit"
mode <- 'driving'
# traffic_model: 'best_guess',  'pessimistic', 'optimistic'
traffic <- 'optimistic'
APIkey <-  'AIzaSyCnC87kEtNLXFAKtpA4GWLwbrm6QROnteU'
# departure_time: in seconds from 1970
dept_time <- '1530000000' # to seconds de una fecha legible, elegir por el empleo del tiempo, a qué hora se va a trabajar, a qué hora se vuelve...
############################################
########## ORIGINS & DESTINATIONS ##########
############################################
# read the 'municipios' sheet from the excel
excelFile <-  '../raw_data/residencia_trabajo_distritos.xlsx'
municipios <- read.xlsx(excelFile, 'Municipios y Distritos') %>%
set_colnames(c('ine_code', 'statistical_zone', 'name', 'province')) %>%
mutate(loc_string = paste(gsub(' ', '+', name), province, 'spain', sep = '+'))
lista_origen_trabajo <- read.xlsx(excelFile, 'Lista origen-destino') %>%
set_colnames(c('route',
'origin_ine_code',
'destination_ine_code',
'workers_count'))
# write.csv(lista_origen_trabajo, 'outputs/lista_origen_trabajo.csv')
codes <- unique(lista_origen_trabajo$origin_ine_code)
# results <- data_frame()
results <- read_csv('outputs/temp_results.csv') # drivin optimistic 69
for (c in 69:length(codes)) {
code <- codes[c]
########### ORIGIN & DESTINATIONS ###########
origin <- municipios %>%
filter(ine_code == code) %>%
.$loc_string
# api limit: 25 origins or 25 destinations
# cut the  sbst_dest
sbst_dest <- lista_origen_trabajo %>%
filter(origin_ine_code == code) %>%
mutate(group = ceiling(row_number()/23))
for (g in unique(sbst_dest$group)) {
sbst_group <- filter(sbst_dest, group == g)
destination <- c()
for (dest_code in unique(sbst_group$destination_ine_code)) {
tmp <- municipios %>%
filter(ine_code == dest_code) %>%
.$loc_string
destination <- paste(tmp, destination, sep = '|')
}
########### BUILD & CALL URL ###########
url <- paste0('https://maps.googleapis.com/maps/api/distancematrix/json?origins=',
origin,
'&destinations=',
destination,
'&mode=',
mode,
'&departure_time=',
dept_time,
'&traffic_model=',
traffic,
'&key=',
APIkey)
raw <- fromJSON(url)
########### RESHAPE THE DATA ###########
for (i in 1:(length(raw$destination_addresses))) {
# los datos
j <- length(raw$destination_addresses) - i + 1;
sbst <- jsonlite::flatten(raw$rows[1, ][[1]][j, ]) %>%
select(-contains('text')) %>%
mutate('origin' = raw$origin_addresses,
'origin_ine_code' = code,
'dest_ine_code' = sbst_group$destination_ine_code[i],
'destination' = raw$destination_addresses[j])
results <- bind_rows(results, sbst)
}
}
}
c
View(results)
for (c in 69:length(codes)) {
code <- codes[c]
########### ORIGIN & DESTINATIONS ###########
origin <- municipios %>%
filter(ine_code == code) %>%
.$loc_string
# api limit: 25 origins or 25 destinations
# cut the  sbst_dest
sbst_dest <- lista_origen_trabajo %>%
filter(origin_ine_code == code) %>%
mutate(group = ceiling(row_number()/23))
for (g in unique(sbst_dest$group)) {
sbst_group <- filter(sbst_dest, group == g)
destination <- c()
for (dest_code in unique(sbst_group$destination_ine_code)) {
tmp <- municipios %>%
filter(ine_code == dest_code) %>%
.$loc_string
destination <- paste(tmp, destination, sep = '|')
}
########### BUILD & CALL URL ###########
url <- paste0('https://maps.googleapis.com/maps/api/distancematrix/json?origins=',
origin,
'&destinations=',
destination,
'&mode=',
mode,
'&departure_time=',
dept_time,
'&traffic_model=',
traffic,
'&key=',
APIkey)
raw <- fromJSON(url)
########### RESHAPE THE DATA ###########
for (i in 1:(length(raw$destination_addresses))) {
# los datos
j <- length(raw$destination_addresses) - i + 1;
sbst <- jsonlite::flatten(raw$rows[1, ][[1]][j, ]) %>%
select(-contains('text')) %>%
mutate('origin' = raw$origin_addresses,
'origin_ine_code' = code,
'dest_ine_code' = sbst_group$destination_ine_code[i],
'destination' = raw$destination_addresses[j])
results <- bind_rows(results, sbst)
}
}
}
raw
